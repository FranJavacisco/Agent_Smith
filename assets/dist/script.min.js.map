{"version":3,"sources":["script.js"],"names":["canvas","document","getElementById","ctx","getContext","loginContainer","querySelector","loginBox","passwordInput","messageDiv","enterButton","secretWord","revealedLetters","Set","lastRevealTime","revealInterval","cycleInterval","initialDelay","isRevealing","now","width","window","innerWidth","innerHeight","resizeCanvas","baseFontSize","Math","floor","startTime","Date","columns","fill","regularColor","highlightColor","AnimatedLetter","letter","x","y","_classCallCheck","this","addEventListener","matrixChars","speed","drops","alpha","min","fontSize","maxFontSize","height","font","concat","resetRevealCycle","clear","startNewCycle","setTimeout","draw","fillStyle","fillRect","currentTime","i","length","char","random","fillText","size","unrevealedLetters","_toConsumableArray","filter","l","has","letterToReveal","add","push","animatedLetters","isAlive","update","classList","checkAccess","value","toUpperCase","style","color","textContent","location","href","remove","animate","showLogin","inputValue","e"],"mappings":"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","file":"script.min.js","sourcesContent":["// Elementos del DOM\r\nconst canvas = document.getElementById('matrix');\r\nconst ctx = canvas.getContext('2d');\r\nconst loginContainer = document.querySelector('.login-container');\r\nconst loginBox = document.querySelector('.login-box');\r\nconst passwordInput = document.querySelector('.password-input');\r\nconst messageDiv = document.querySelector('.message');\r\nconst enterButton = document.querySelector('.enter-button');\r\n\r\n// Configuración\r\nconst secretWord = \"MATRIX\";\r\nlet revealedLetters = new Set();\r\nlet lastRevealTime = 0;\r\nconst revealInterval = 3000; // 3 segundos entre cada revelación\r\nconst cycleInterval = 5000; // 5 segundos entre ciclos\r\nconst initialDelay = 5000; // 5 segundos de retraso inicial\r\nlet isRevealing = false;\r\nlet startTime = Date.now();\r\n\r\n// Seguimiento de letras animadas\r\nlet animatedLetters = [];\r\n\r\n// Ajustar tamaño del canvas\r\nfunction resizeCanvas() {\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n}\r\n\r\nwindow.addEventListener('resize', resizeCanvas);\r\nresizeCanvas();\r\n\r\n// Configuración de la lluvia de código\r\nconst matrixChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%^&*\";\r\nconst baseFontSize = 14;\r\nconst columns = Math.floor(canvas.width/baseFontSize);\r\nconst drops = new Array(columns).fill(0);\r\n\r\n// Colores\r\nconst regularColor = \"#22b455\";\r\nconst highlightColor = \"#ff0000\";\r\n\r\n// Clase para las letras animadas\r\nclass AnimatedLetter {\r\n    constructor(letter, x, y) {\r\n        this.letter = letter;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.fontSize = baseFontSize;\r\n        this.maxFontSize = baseFontSize * 3;\r\n        this.speed = 2;\r\n        this.alpha = 1;\r\n    }\r\n\r\n    update() {\r\n        this.y += this.speed;\r\n        this.fontSize = Math.min(this.fontSize + 0.5, this.maxFontSize);\r\n        if (this.y > canvas.height) {\r\n            this.alpha -= 0.05;\r\n        }\r\n        return this.alpha > 0;\r\n    }\r\n\r\n    draw() {\r\n        ctx.font = `${this.fontSize}px monospace`;\r\n        ctx.fillStyle = `rgba(255, 0, 0, ${this.alpha})`;\r\n        ctx.fillText(this.letter, this.x, this.y);\r\n    }\r\n}\r\n\r\n// Control del ciclo de revelación\r\nfunction resetRevealCycle() {\r\n    revealedLetters.clear();\r\n    isRevealing = true;\r\n    lastRevealTime = Date.now();\r\n}\r\n\r\nfunction startNewCycle() {\r\n    setTimeout(resetRevealCycle, cycleInterval);\r\n}\r\n\r\n// Función principal de dibujo\r\nfunction draw() {\r\n    // Efecto de desvanecimiento\r\n    ctx.fillStyle = \"rgba(2, 2, 4, 0.035)\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    ctx.font = baseFontSize + \"px monospace\";\r\n    \r\n    const currentTime = Date.now();\r\n    \r\n    // Dibujar caracteres normales\r\n    for(let i = 0; i < drops.length; i++) {\r\n        const char = matrixChars[Math.floor(Math.random() * matrixChars.length)];\r\n        ctx.fillStyle = regularColor;\r\n        ctx.fillText(char, i * baseFontSize, drops[i] * baseFontSize);\r\n\r\n        if(drops[i] * baseFontSize > canvas.height && Math.random() > 0.955) {\r\n            drops[i] = 0;\r\n        }\r\n        drops[i] += 0.5;\r\n    }\r\n\r\n    // Revelar letras secretas después del retraso inicial\r\n    if (currentTime - startTime > initialDelay && isRevealing) {\r\n        if (currentTime - lastRevealTime > revealInterval && \r\n            revealedLetters.size < secretWord.length) {\r\n            \r\n            let unrevealedLetters = [...secretWord].filter(l => !revealedLetters.has(l));\r\n            if (unrevealedLetters.length > 0) {\r\n                let letterToReveal = unrevealedLetters[Math.floor(Math.random() * unrevealedLetters.length)];\r\n                revealedLetters.add(letterToReveal);\r\n                \r\n                // Crear nueva letra animada\r\n                const randomColumn = Math.floor(Math.random() * columns);\r\n                const x = randomColumn * baseFontSize;\r\n                animatedLetters.push(new AnimatedLetter(letterToReveal, x, 0));\r\n                \r\n                lastRevealTime = currentTime;\r\n\r\n                // Si todas las letras han sido reveladas, programar el próximo ciclo\r\n                if (revealedLetters.size === secretWord.length) {\r\n                    isRevealing = false;\r\n                    startNewCycle();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Actualizar y dibujar letras animadas\r\n    animatedLetters = animatedLetters.filter(letter => {\r\n        const isAlive = letter.update();\r\n        if (isAlive) {\r\n            letter.draw();\r\n        }\r\n        return isAlive;\r\n    });\r\n}\r\n\r\n// Mostrar login\r\nfunction showLogin() {\r\n    loginContainer.classList.add('visible');\r\n    loginBox.classList.add('active');\r\n}\r\n\r\n// Eventos de interacción\r\nif ('ontouchstart' in window) {\r\n    document.addEventListener('touchstart', showLogin);\r\n} else {\r\n    document.addEventListener('mousemove', showLogin);\r\n}\r\n\r\n// Verificación de acceso\r\nfunction checkAccess() {\r\n    const inputValue = passwordInput.value.toUpperCase();\r\n    if (inputValue === secretWord) {\r\n        messageDiv.style.color = highlightColor;\r\n        messageDiv.textContent = \"Acceso Concedido...\";\r\n        enterButton.classList.add('success');\r\n        \r\n        setTimeout(() => {\r\n            window.location.href = '/blog';\r\n        }, 2000);\r\n    } else {\r\n        messageDiv.style.color = '#ff0000';\r\n        messageDiv.textContent = \"Código Incorrecto\";\r\n        enterButton.classList.add('error');\r\n        passwordInput.value = '';\r\n        \r\n        setTimeout(() => {\r\n            messageDiv.textContent = '';\r\n            enterButton.classList.remove('error');\r\n        }, 2000);\r\n    }\r\n}\r\n\r\n// Eventos para el botón y el input\r\nenterButton.addEventListener('click', checkAccess);\r\npasswordInput.addEventListener('keypress', (e) => {\r\n    if (e.key === 'Enter') {\r\n        checkAccess();\r\n    }\r\n});\r\n\r\n// Iniciar el primer ciclo de revelación\r\nsetTimeout(() => {\r\n    isRevealing = true;\r\n}, initialDelay);\r\n\r\n// Iniciar animación\r\nfunction animate() {\r\n    requestAnimationFrame(animate);\r\n    draw();\r\n}\r\n\r\nanimate();"]}